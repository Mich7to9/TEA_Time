; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	M:\Mikrocontroller 6.Semester\Ege\loesung_1\stopwatch.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_start_stop_watch
PUBLIC	_init_stop_watch
EXTRN	__imp__QueryPerformanceFrequency@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_frequency DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File m:\mikrocontroller 6.semester\ege\loesung_1\stopwatch.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _init_stop_watch
_TEXT	SEGMENT
_ret$ = -8						; size = 4
_init_stop_watch PROC					; COMDAT

; 33   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 34   : 	int ret = EXIT_SUCCESS;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ret$[ebp], 0

; 35   : 	if(!QueryPerformanceFrequency((LARGE_INTEGER*)&frequency))

  00025	8b f4		 mov	 esi, esp
  00027	68 00 00 00 00	 push	 OFFSET _frequency
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceFrequency@4
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00039	85 c0		 test	 eax, eax
  0003b	75 09		 jne	 SHORT $LN2@init_stop_

; 36   : 	{
; 37   : 		ret = EXIT_FAILURE;

  0003d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _ret$[ebp], 1

; 38   : 	}
; 39   : 	else

  00044	eb 0c		 jmp	 SHORT $LN1@init_stop_
$LN2@init_stop_:

; 40   : 	{
; 41   : 		start_stop_watch();

  00046	e8 00 00 00 00	 call	 _start_stop_watch

; 42   : 		ret = EXIT_SUCCESS;

  0004b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ret$[ebp], 0
$LN1@init_stop_:

; 43   : 	}
; 44   : 	return ret;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _ret$[ebp]

; 45   : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0005e	3b ec		 cmp	 ebp, esp
  00060	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00065	8b e5		 mov	 esp, ebp
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_init_stop_watch ENDP
_TEXT	ENDS
EXTRN	__imp__QueryPerformanceCounter@4:PROC
_BSS	SEGMENT
_start_val DQ	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _start_stop_watch
_TEXT	SEGMENT
_start_stop_watch PROC					; COMDAT

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 50   : 	QueryPerformanceCounter((LARGE_INTEGER*)&start_val);

  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET _start_val
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 51   : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
_start_stop_watch ENDP
_TEXT	ENDS
PUBLIC	__real@412e848000000000
PUBLIC	_stop_stop_watch
EXTRN	__fltused:DWORD
EXTRN	__ftol2:PROC
_BSS	SEGMENT
_stop_val DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+006
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _stop_stop_watch
_TEXT	SEGMENT
tv95 = -224						; size = 8
tv92 = -216						; size = 8
tv82 = -208						; size = 8
tv79 = -200						; size = 8
_stop_stop_watch PROC					; COMDAT

; 54   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 00 00
	00		 sub	 esp, 224		; 000000e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 20 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-224]
  00012	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 55   : 	QueryPerformanceCounter((LARGE_INTEGER*)&stop_val);

  0001e	8b f4		 mov	 esi, esp
  00020	68 00 00 00 00	 push	 OFFSET _stop_val
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__QueryPerformanceCounter@4
  0002b	3b f4		 cmp	 esi, esp
  0002d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 56   : 	return ((stop_val - start_val)*1e6 / frequency);

  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR _stop_val
  00037	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR _start_val
  0003d	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _stop_val+4
  00043	1b 0d 04 00 00
	00		 sbb	 ecx, DWORD PTR _start_val+4
  00049	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv79[ebp], eax
  0004f	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv79[ebp+4], ecx
  00055	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv79[ebp+4]
  0005b	89 95 34 ff ff
	ff		 mov	 DWORD PTR tv82[ebp+4], edx
  00061	81 a5 3c ff ff
	ff ff ff ff 7f	 and	 DWORD PTR tv79[ebp+4], 2147483647 ; 7fffffffH
  0006b	df ad 38 ff ff
	ff		 fild	 QWORD PTR tv79[ebp]
  00071	81 a5 34 ff ff
	ff 00 00 00 80	 and	 DWORD PTR tv82[ebp+4], -2147483648 ; 80000000H
  0007b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
  00085	df ad 30 ff ff
	ff		 fild	 QWORD PTR tv82[ebp]
  0008b	d9 e0		 fchs
  0008d	de c1		 faddp	 ST(1), ST(0)
  0008f	dc 0d 00 00 00
	00		 fmul	 QWORD PTR __real@412e848000000000
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR _frequency
  0009a	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _frequency+4
  000a0	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000a6	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv92[ebp+4], ecx
  000ac	8b 95 2c ff ff
	ff		 mov	 edx, DWORD PTR tv92[ebp+4]
  000b2	89 95 24 ff ff
	ff		 mov	 DWORD PTR tv95[ebp+4], edx
  000b8	81 a5 2c ff ff
	ff ff ff ff 7f	 and	 DWORD PTR tv92[ebp+4], 2147483647 ; 7fffffffH
  000c2	df ad 28 ff ff
	ff		 fild	 QWORD PTR tv92[ebp]
  000c8	81 a5 24 ff ff
	ff 00 00 00 80	 and	 DWORD PTR tv95[ebp+4], -2147483648 ; 80000000H
  000d2	c7 85 20 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
  000dc	df ad 20 ff ff
	ff		 fild	 QWORD PTR tv95[ebp]
  000e2	d9 e0		 fchs
  000e4	de c1		 faddp	 ST(1), ST(0)
  000e6	de f9		 fdivp	 ST(1), ST(0)
  000e8	e8 00 00 00 00	 call	 __ftol2

; 57   : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	81 c4 e0 00 00
	00		 add	 esp, 224		; 000000e0H
  000f6	3b ec		 cmp	 ebp, esp
  000f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
_stop_stop_watch ENDP
_TEXT	ENDS
END
